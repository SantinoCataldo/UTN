<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/Circulo.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/Circulo.java" />
              <option name="originalContent" value="public class Circulo {&#10;    private double radio = 1.0;&#10;    private String color = &quot;rojo&quot;;&#10;&#10;    public Circulo(){}&#10;&#10;    public Circulo(double radio, String color) {&#10;        this.radio = radio;&#10;        this.color = color;&#10;    }&#10;&#10;    public double getRadio() {&#10;        return radio;&#10;    }&#10;&#10;    public String getColor() {&#10;        return color;&#10;    }&#10;&#10;    public double getArea() {&#10;        return Math.PI * radio * radio;&#10;    }&#10;&#10;    public void mostrarDatos() {&#10;        System.out.println(&quot;Radio: &quot; + radio);&#10;        System.out.println(&quot;Color: &quot; + color);&#10;        System.out.println(&quot;Area: &quot; + getArea());&#10;    }&#10;}&#10;&#10;class Cilindro extends Circulo {&#10;    private double altura = 1.0;&#10;&#10;    public Cilindro() {&#10;        super();&#10;    }&#10;&#10;    public Cilindro(double radio, double altura, String color) {&#10;        super(radio, color);&#10;        this.altura = altura;&#10;    }&#10;&#10;    public double getVolumen() {&#10;        return super.getArea() * altura;&#10;    }&#10;&#10;    public double getAltura() {&#10;        return altura;&#10;    }&#10;&#10;    public double getArea() {&#10;        return 2 * Math.PI * getRadio() * altura + 2 * super.getArea();&#10;    }&#10;&#10;    public void mostrarDatos() {&#10;        System.out.println(&quot;----------- Datos del Cilindro -----------&quot;);&#10;        System.out.println(&quot;Radio: &quot; + getRadio());&#10;        System.out.println(&quot;Color: &quot; + getColor());&#10;        System.out.println(&quot;Area base (círculo): &quot; + super.getArea());&#10;        System.out.println(&quot;Area superficial total: &quot; + getArea());&#10;        System.out.println(&quot;Altura: &quot; + altura);&#10;        System.out.println(&quot;Volumen: &quot; + getVolumen());&#10;    }&#10;}" />
              <option name="updatedContent" value="public class Circulo {&#10;    private double radio = 1.0;&#10;    private String color = &quot;rojo&quot;;&#10;&#10;    public Circulo(){}&#10;&#10;    public Circulo(double radio, String color) {&#10;        this.radio = radio;&#10;        this.color = color;&#10;    }&#10;&#10;    public double getRadio() {&#10;        return radio;&#10;    }&#10;&#10;    public String getColor() {&#10;        return color;&#10;    }&#10;&#10;    public double getArea() {&#10;        return Math.PI * radio * radio;&#10;    }&#10;&#10;    public void mostrarDatos() {&#10;        System.out.println(&quot;Radio: &quot; + radio);&#10;        System.out.println(&quot;Color: &quot; + color);&#10;        System.out.println(&quot;Area: &quot; + getArea());&#10;    }&#10;}&#10;&#10;class Cilindro extends Circulo {&#10;    private double altura = 1.0;&#10;&#10;    public Cilindro() {&#10;        super();&#10;    }&#10;&#10;    public Cilindro(double radio, double altura, String color) {&#10;        super(radio, color);&#10;        this.altura = altura;&#10;    }&#10;&#10;    public double getVolumen() {&#10;        return super.getArea() * altura;&#10;    }&#10;&#10;    public double getAltura() {&#10;        return altura;&#10;    }&#10;&#10;    public double getArea() {&#10;        return 2 * Math.PI * getRadio() * altura + 2 * super.getArea();&#10;    }&#10;&#10;    public void mostrarDatos() {&#10;        System.out.println(&quot;----------- Datos del Cilindro -----------&quot;);&#10;        System.out.println(&quot;Radio: &quot; + getRadio());&#10;        System.out.println(&quot;Color: &quot; + getColor());&#10;        System.out.println(&quot;Area base (círculo): &quot; + super.getArea());&#10;        System.out.println(&quot;Area superficial total: &quot; + getArea());&#10;        System.out.println(&quot;Altura: &quot; + altura);&#10;        System.out.println(&quot;Volumen: &quot; + getVolumen());&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/Main.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/Main.java" />
              <option name="originalContent" value="import java.util.ArrayList;&#10;import java.util.Scanner;&#10;import java.util.UUID;&#10;&#10;public class Main {&#10;    public static void main(String[] args) {&#10;        /* Punto 1&#10;        ArrayList&lt;Empleado&gt; empleados = new ArrayList&lt;&gt;();&#10;        Scanner sc = new Scanner(System.in);&#10;        int opcion;&#10;&#10;        do {&#10;            System.out.println(&quot;1. Agregar empleado&quot;);&#10;            System.out.println(&quot;2. Mostrar pagos&quot;);&#10;            System.out.println(&quot;3. Salir&quot;);&#10;            opcion = sc.nextInt();&#10;            sc.nextLine();&#10;&#10;            switch(opcion) {&#10;                case 1:&#10;                    System.out.println(&quot;Tipo de empleado (1=Tiempo completo, 2=Por horas, 3=Contratista):&quot;);&#10;                    int tipo = sc.nextInt();&#10;                    sc.nextLine();&#10;                    System.out.println(&quot;Nombre:&quot;);&#10;                    String nombre = sc.nextLine();&#10;&#10;                    if(tipo == 1) {&#10;                        System.out.println(&quot;Salario mensual:&quot;);&#10;                        double salario = sc.nextDouble();&#10;                        empleados.add( new EmpleadoTiempoCompleto(nombre, salario));&#10;                    } else if(tipo == 2) {&#10;                        System.out.println(&quot;Horas trabajadas:&quot;);&#10;                        double horas = sc.nextDouble();&#10;                        System.out.println(&quot;Tarifa por hora:&quot;);&#10;                        double tarifa = sc.nextDouble();&#10;                        empleados.add(new EmpleadoPorHoras(nombre, horas, tarifa));&#10;                    } else if(tipo == 3) {&#10;                        System.out.println(&quot;Horas trabajadas:&quot;);&#10;                        double horas = sc.nextDouble();&#10;                        System.out.println(&quot;Tarifa por proyecto:&quot;);&#10;                        double tarifa = sc.nextDouble();&#10;                        empleados.add(new EmpleadoContratista(nombre, horas, tarifa));&#10;                    }&#10;                    break;&#10;                case 2:&#10;                    for(Empleado e : empleados) {&#10;                        System.out.println(e.getNombre() + &quot; cobra &quot; + e.calcularPago());&#10;                    }&#10;                    break;&#10;            }&#10;&#10;        } while(opcion != 3);&#10;&#10;        sc.close();&#10;        */&#10;&#10;        /* Punto 2&#10;        Autor autor = new Autor(&quot;Joshua&quot;, &quot;Bloch&quot;, &quot;joshua@email.com&quot;, 'M');&#10;&#10;        System.out.println(autor);&#10;&#10;        Libro libro = new Libro(&quot;Effective Java&quot;, autor, 450, 150);&#10;&#10;        System.out.println(libro);&#10;&#10;        libro.setPrecio(500);&#10;        libro.aumentarStock(50);&#10;&#10;        Autor autorDelLibro = libro.getAutor();&#10;        System.out.println(&quot;Nombre: &quot; + autorDelLibro.getNombre());&#10;        System.out.println(&quot;Apellido: &quot; + autorDelLibro.getApellido());&#10;        System.out.println(&quot;Email: &quot; + autorDelLibro.getEmail());&#10;        System.out.println(&quot;Género: &quot; + autorDelLibro.getGenero());&#10;&#10;        libro.imprimirMensajeVenta();&#10;         */&#10;&#10;        /*Punto 3&#10;        Cliente cliente = new Cliente(UUID.randomUUID(), &quot;Jorge&quot;, &quot;Jorge@gmail.com&quot;, 10);&#10;        cliente.MostrarInfo();&#10;        Factura factura = new Factura(cliente, 1000);&#10;        factura.MostrarInfo();&#10;         */&#10;&#10;        /* Punto 4&#10;        Cilindro cilindro1 = new Cilindro();&#10;&#10;        cilindro1.mostrarDatos();&#10;&#10;        Cilindro cilindro2 = new Cilindro(1, 2, &quot;azul&quot;);&#10;&#10;        cilindro2.mostrarDatos();&#10;         */&#10;&#10;        // Inicializar 4 estudiantes&#10;        Estudiante e1 = new Estudiante(&quot;Ana&quot;, &quot;García&quot;, &quot;ana@gmail.com&quot;, &quot;Calle 1&quot;, 12345678, 10000, 2022, &quot;Ingeniería&quot;);&#10;        Estudiante e2 = new Estudiante(&quot;Luis&quot;, &quot;Pérez&quot;, &quot;luis@gmail.com&quot;, &quot;Calle 2&quot;, 23456789, 12000, 2021, &quot;Medicina&quot;);&#10;        Estudiante e3 = new Estudiante(&quot;Sofía&quot;, &quot;López&quot;, &quot;sofia@gmail.com&quot;, &quot;Calle 3&quot;, 34567890, 11000, 2023, &quot;Derecho&quot;);&#10;        Estudiante e4 = new Estudiante(&quot;Juan&quot;, &quot;Martínez&quot;, &quot;juan@gmail.com&quot;, &quot;Calle 4&quot;, 45678901, 9000, 2020, &quot;Arquitectura&quot;);&#10;&#10;        // Inicializar 4 staff&#10;        Staff s1 = new Staff(&quot;Carlos&quot;, &quot;Ruiz&quot;, &quot;carlos@gmail.com&quot;, &quot;Calle 5&quot;, 56789012, &quot;Mañana&quot;, 20000);&#10;        Staff s2 = new Staff(&quot;María&quot;, &quot;Fernández&quot;, &quot;maria@gmail.com&quot;, &quot;Calle 6&quot;, 67890123, &quot;Tarde&quot;, 22000);&#10;        Staff s3 = new Staff(&quot;Pedro&quot;, &quot;Sosa&quot;, &quot;pedro@gmail.com&quot;, &quot;Calle 7&quot;, 78901234, &quot;Noche&quot;, 21000);&#10;        Staff s4 = new Staff(&quot;Lucía&quot;, &quot;Díaz&quot;, &quot;lucia@gmail.com&quot;, &quot;Calle 8&quot;, 89012345, &quot;Mañana&quot;, 23000);&#10;&#10;        // Array para almacenar ambos tipos&#10;        Persona[] personas = {e1, e2, e3, e4, s1, s2, s3, s4};&#10;&#10;        int cantidadEstudiantes = 0;&#10;        int cantidadStaff = 0;&#10;        int totalCuotas = 0;&#10;&#10;        for (Persona p : personas) {&#10;            if (p instanceof Estudiante) {&#10;                cantidadEstudiantes++;&#10;                totalCuotas += ((Estudiante)p).getCuotaMensual();&#10;            } else if (p instanceof Staff) {&#10;                cantidadStaff++;&#10;            }&#10;        }&#10;&#10;        System.out.println(&quot;Cantidad de estudiantes: &quot; + cantidadEstudiantes);&#10;        System.out.println(&quot;Cantidad de staff: &quot; + cantidadStaff);&#10;        System.out.println(&quot;Total de ingresos por cuotas: $&quot; + totalCuotas);&#10;    }&#10;}" />
              <option name="updatedContent" value="import java.util.ArrayList;&#10;import java.util.Scanner;&#10;import java.util.UUID;&#10;&#10;public class Main {&#10;    public static void main(String[] args) {&#10;        /* Punto 1&#10;        ArrayList&lt;Empleado&gt; empleados = new ArrayList&lt;&gt;();&#10;        Scanner sc = new Scanner(System.in);&#10;        int opcion;&#10;&#10;        do {&#10;            System.out.println(&quot;1. Agregar empleado&quot;);&#10;            System.out.println(&quot;2. Mostrar pagos&quot;);&#10;            System.out.println(&quot;3. Salir&quot;);&#10;            opcion = sc.nextInt();&#10;            sc.nextLine();&#10;&#10;            switch(opcion) {&#10;                case 1:&#10;                    System.out.println(&quot;Tipo de empleado (1=Tiempo completo, 2=Por horas, 3=Contratista):&quot;);&#10;                    int tipo = sc.nextInt();&#10;                    sc.nextLine();&#10;                    System.out.println(&quot;Nombre:&quot;);&#10;                    String nombre = sc.nextLine();&#10;&#10;                    if(tipo == 1) {&#10;                        System.out.println(&quot;Salario mensual:&quot;);&#10;                        double salario = sc.nextDouble();&#10;                        empleados.add( new EmpleadoTiempoCompleto(nombre, salario));&#10;                    } else if(tipo == 2) {&#10;                        System.out.println(&quot;Horas trabajadas:&quot;);&#10;                        double horas = sc.nextDouble();&#10;                        System.out.println(&quot;Tarifa por hora:&quot;);&#10;                        double tarifa = sc.nextDouble();&#10;                        empleados.add(new EmpleadoPorHoras(nombre, horas, tarifa));&#10;                    } else if(tipo == 3) {&#10;                        System.out.println(&quot;Horas trabajadas:&quot;);&#10;                        double horas = sc.nextDouble();&#10;                        System.out.println(&quot;Tarifa por proyecto:&quot;);&#10;                        double tarifa = sc.nextDouble();&#10;                        empleados.add(new EmpleadoContratista(nombre, horas, tarifa));&#10;                    }&#10;                    break;&#10;                case 2:&#10;                    for(Empleado e : empleados) {&#10;                        System.out.println(e.getNombre() + &quot; cobra &quot; + e.calcularPago());&#10;                    }&#10;                    break;&#10;            }&#10;&#10;        } while(opcion != 3);&#10;&#10;        sc.close();&#10;        */&#10;&#10;        /* Punto 2&#10;        Autor autor = new Autor(&quot;Joshua&quot;, &quot;Bloch&quot;, &quot;joshua@email.com&quot;, 'M');&#10;&#10;        System.out.println(autor);&#10;&#10;        Libro libro = new Libro(&quot;Effective Java&quot;, autor, 450, 150);&#10;&#10;        System.out.println(libro);&#10;&#10;        libro.setPrecio(500);&#10;        libro.aumentarStock(50);&#10;&#10;        Autor autorDelLibro = libro.getAutor();&#10;        System.out.println(&quot;Nombre: &quot; + autorDelLibro.getNombre());&#10;        System.out.println(&quot;Apellido: &quot; + autorDelLibro.getApellido());&#10;        System.out.println(&quot;Email: &quot; + autorDelLibro.getEmail());&#10;        System.out.println(&quot;Género: &quot; + autorDelLibro.getGenero());&#10;&#10;        libro.imprimirMensajeVenta();&#10;         */&#10;&#10;        /*Punto 3&#10;        Cliente cliente = new Cliente(UUID.randomUUID(), &quot;Jorge&quot;, &quot;Jorge@gmail.com&quot;, 10);&#10;        cliente.MostrarInfo();&#10;        Factura factura = new Factura(cliente, 1000);&#10;        factura.MostrarInfo();&#10;         */&#10;&#10;        /* Punto 4&#10;        Cilindro cilindro1 = new Cilindro();&#10;&#10;        cilindro1.mostrarDatos();&#10;&#10;        Cilindro cilindro2 = new Cilindro(1, 2, &quot;azul&quot;);&#10;&#10;        cilindro2.mostrarDatos();&#10;         */&#10;&#10;        // Inicializar 4 estudiantes&#10;        Estudiante e1 = new Estudiante(&quot;Ana&quot;, &quot;García&quot;, &quot;ana@gmail.com&quot;, &quot;Calle 1&quot;, 12345678, 10000, 2022, &quot;Ingeniería&quot;);&#10;        Estudiante e2 = new Estudiante(&quot;Luis&quot;, &quot;Pérez&quot;, &quot;luis@gmail.com&quot;, &quot;Calle 2&quot;, 23456789, 12000, 2021, &quot;Medicina&quot;);&#10;        Estudiante e3 = new Estudiante(&quot;Sofía&quot;, &quot;López&quot;, &quot;sofia@gmail.com&quot;, &quot;Calle 3&quot;, 34567890, 11000, 2023, &quot;Derecho&quot;);&#10;        Estudiante e4 = new Estudiante(&quot;Juan&quot;, &quot;Martínez&quot;, &quot;juan@gmail.com&quot;, &quot;Calle 4&quot;, 45678901, 9000, 2020, &quot;Arquitectura&quot;);&#10;&#10;        // Inicializar 4 staff&#10;        Staff s1 = new Staff(&quot;Carlos&quot;, &quot;Ruiz&quot;, &quot;carlos@gmail.com&quot;, &quot;Calle 5&quot;, 56789012, &quot;Mañana&quot;, 20000);&#10;        Staff s2 = new Staff(&quot;María&quot;, &quot;Fernández&quot;, &quot;maria@gmail.com&quot;, &quot;Calle 6&quot;, 67890123, &quot;Tarde&quot;, 22000);&#10;        Staff s3 = new Staff(&quot;Pedro&quot;, &quot;Sosa&quot;, &quot;pedro@gmail.com&quot;, &quot;Calle 7&quot;, 78901234, &quot;Noche&quot;, 21000);&#10;        Staff s4 = new Staff(&quot;Lucía&quot;, &quot;Díaz&quot;, &quot;lucia@gmail.com&quot;, &quot;Calle 8&quot;, 89012345, &quot;Mañana&quot;, 23000);&#10;&#10;        // Array para almacenar ambos tipos&#10;        Persona[] personas = {e1, e2, e3, e4, s1, s2, s3, s4};&#10;&#10;        int cantidadEstudiantes = 0;&#10;        int cantidadStaff = 0;&#10;        int totalCuotas = 0;&#10;&#10;        for (Persona p : personas) {&#10;            if (p instanceof Estudiante) {&#10;                cantidadEstudiantes++;&#10;                totalCuotas += ((Estudiante)p).getCuotaMensual();&#10;            } else if (p instanceof Staff) {&#10;                cantidadStaff++;&#10;            }&#10;        }&#10;&#10;        System.out.println(&quot;Cantidad de estudiantes: &quot; + cantidadEstudiantes);&#10;        System.out.println(&quot;Cantidad de staff: &quot; + cantidadStaff);&#10;        System.out.println(&quot;Total de ingresos por cuotas: $&quot; + totalCuotas);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/Persona.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/Persona.java" />
              <option name="originalContent" value="public class Persona {&#10;    private String nombre;&#10;    private String apellido;&#10;    private String gmail;&#10;    private String direccion;&#10;    private int dni;&#10;&#10;    public Persona(String nombre, String apellido, String gmail, String direccion, int dni) {&#10;        this.nombre = nombre;&#10;        this.apellido = apellido;&#10;        this.gmail = gmail;&#10;        this.direccion = direccion;&#10;        this.dni = dni;&#10;    }&#10;&#10;    public String getNombre() {&#10;        return nombre;&#10;    }&#10;&#10;    public String getApellido() {&#10;        return apellido;&#10;    }&#10;&#10;    public String getGmail() {&#10;        return gmail;&#10;    }&#10;&#10;    public String getDireccion() {&#10;        return direccion;&#10;    }&#10;&#10;    public int getDni() {&#10;        return dni;&#10;    }&#10;&#10;    public void mostrarDatos() {&#10;        System.out.println(&quot;Nombre: &quot; + nombre);&#10;        System.out.println(&quot;Apellido: &quot; + apellido);&#10;        System.out.println(&quot;Gmail: &quot; + gmail);&#10;        System.out.println(&quot;Direccion: &quot; + direccion);&#10;        System.out.println(&quot;DNI: &quot; + dni);&#10;    }&#10;}&#10;&#10;class Estudiante extends Persona {&#10;    private int cuotaMensual;&#10;    private int anioIngreso;&#10;    private String carrera;&#10;&#10;    public Estudiante(String nombre, String apellido, String gmail, String direccion, int dni, int cuotaMensual, int anioIngreso, String carrera) {&#10;        super(nombre, apellido, gmail, direccion, dni);&#10;        this.cuotaMensual = cuotaMensual;&#10;        this.anioIngreso = anioIngreso;&#10;        this.carrera = carrera;&#10;    }&#10;&#10;    public int getCuotaMensual() {&#10;        return cuotaMensual;&#10;    }&#10;&#10;    public void setCuotaMensual(int cuotaMensual) {&#10;        this.cuotaMensual = cuotaMensual;&#10;    }&#10;&#10;    public int getAnioIngreso() {&#10;        return anioIngreso;&#10;    }&#10;&#10;    public void setAnioIngreso(int anioIngreso) {&#10;        this.anioIngreso = anioIngreso;&#10;    }&#10;&#10;    public String getCarrera() {&#10;        return carrera;&#10;    }&#10;&#10;    public void setCarrera(String carrera) {&#10;        this.carrera = carrera;&#10;    }&#10;&#10;    @Override&#10;    public void mostrarDatos() {&#10;        super.mostrarDatos();&#10;        System.out.println(&quot;Cuota Mensual: &quot; + cuotaMensual);&#10;        System.out.println(&quot;Año de Ingreso: &quot; + anioIngreso);&#10;        System.out.println(&quot;Carrera: &quot; + carrera);&#10;    }&#10;}&#10;&#10;class Staff extends Persona {&#10;    private String turno;&#10;    private double salario;&#10;&#10;&#10;    public Staff(String nombre, String apellido, String gmail, String direccion, int dni, String turno, double salario) {&#10;        super(nombre, apellido, gmail, direccion, dni);&#10;        this.turno = turno;&#10;        this.salario = salario;&#10;    }&#10;&#10;    public String getTurno() {&#10;        return turno;&#10;    }&#10;&#10;    public void setTurno(String turno) {&#10;        this.turno = turno;&#10;    }&#10;&#10;    public double getSalario() {&#10;        return salario;&#10;    }&#10;&#10;    public void setSalario(double salario) {&#10;        this.salario = salario;&#10;    }&#10;&#10;    @Override&#10;    public void mostrarDatos() {&#10;        super.mostrarDatos();&#10;        System.out.println(&quot;Turno: &quot; + turno);&#10;        System.out.println(&quot;Salario: &quot; + salario);&#10;    }&#10;}" />
              <option name="updatedContent" value="public class Persona {&#10;    private String nombre;&#10;    private String apellido;&#10;    private String gmail;&#10;    private String direccion;&#10;    private int dni;&#10;&#10;    public Persona(String nombre, String apellido, String gmail, String direccion, int dni) {&#10;        this.nombre = nombre;&#10;        this.apellido = apellido;&#10;        this.gmail = gmail;&#10;        this.direccion = direccion;&#10;        this.dni = dni;&#10;    }&#10;&#10;    public String getNombre() {&#10;        return nombre;&#10;    }&#10;&#10;    public String getApellido() {&#10;        return apellido;&#10;    }&#10;&#10;    public String getGmail() {&#10;        return gmail;&#10;    }&#10;&#10;    public String getDireccion() {&#10;        return direccion;&#10;    }&#10;&#10;    public int getDni() {&#10;        return dni;&#10;    }&#10;&#10;    public void mostrarDatos() {&#10;        System.out.println(&quot;Nombre: &quot; + nombre);&#10;        System.out.println(&quot;Apellido: &quot; + apellido);&#10;        System.out.println(&quot;Gmail: &quot; + gmail);&#10;        System.out.println(&quot;Direccion: &quot; + direccion);&#10;        System.out.println(&quot;DNI: &quot; + dni);&#10;    }&#10;}&#10;&#10;class Estudiante extends Persona {&#10;    private int cuotaMensual;&#10;    private int anioIngreso;&#10;    private String carrera;&#10;&#10;    public Estudiante(String nombre, String apellido, String gmail, String direccion, int dni, int cuotaMensual, int anioIngreso, String carrera) {&#10;        super(nombre, apellido, gmail, direccion, dni);&#10;        this.cuotaMensual = cuotaMensual;&#10;        this.anioIngreso = anioIngreso;&#10;        this.carrera = carrera;&#10;    }&#10;&#10;    public int getCuotaMensual() {&#10;        return cuotaMensual;&#10;    }&#10;&#10;    public void setCuotaMensual(int cuotaMensual) {&#10;        this.cuotaMensual = cuotaMensual;&#10;    }&#10;&#10;    public int getAnioIngreso() {&#10;        return anioIngreso;&#10;    }&#10;&#10;    public void setAnioIngreso(int anioIngreso) {&#10;        this.anioIngreso = anioIngreso;&#10;    }&#10;&#10;    public String getCarrera() {&#10;        return carrera;&#10;    }&#10;&#10;    public void setCarrera(String carrera) {&#10;        this.carrera = carrera;&#10;    }&#10;&#10;    @Override&#10;    public void mostrarDatos() {&#10;        super.mostrarDatos();&#10;        System.out.println(&quot;Cuota Mensual: &quot; + cuotaMensual);&#10;        System.out.println(&quot;Año de Ingreso: &quot; + anioIngreso);&#10;        System.out.println(&quot;Carrera: &quot; + carrera);&#10;    }&#10;}&#10;&#10;class Staff extends Persona {&#10;    private String turno;&#10;    private double salario;&#10;&#10;&#10;    public Staff(String nombre, String apellido, String gmail, String direccion, int dni, String turno, double salario) {&#10;        super(nombre, apellido, gmail, direccion, dni);&#10;        this.turno = turno;&#10;        this.salario = salario;&#10;    }&#10;&#10;    public String getTurno() {&#10;        return turno;&#10;    }&#10;&#10;    public void setTurno(String turno) {&#10;        this.turno = turno;&#10;    }&#10;&#10;    public double getSalario() {&#10;        return salario;&#10;    }&#10;&#10;    public void setSalario(double salario) {&#10;        this.salario = salario;&#10;    }&#10;&#10;    @Override&#10;    public void mostrarDatos() {&#10;        super.mostrarDatos();&#10;        System.out.println(&quot;Turno: &quot; + turno);&#10;        System.out.println(&quot;Salario: &quot; + salario);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>